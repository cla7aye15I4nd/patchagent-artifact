From 8f702156e8c9ecc8bbcbabfc0d8ee38bc294dddd Mon Sep 17 00:00:00 2001
From: Francesc Alted <francesc@blosc.org>
Date: Tue, 28 Sep 2021 18:19:59 +0200
Subject: [PATCH] BloscLZ version bumped to 2.5.1

---
 blosc/blosc.h   | 2 +-
 blosc/blosclz.c | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/blosc/blosc.h b/blosc/blosc.h
index c1ff3944..77a2411f 100644
--- a/blosc/blosc.h
+++ b/blosc/blosc.h
@@ -25,7 +25,7 @@ extern "C" {
 #define BLOSC_VERSION_REVISION "$Rev$"   /* revision version */
 #define BLOSC_VERSION_DATE     "$Date:: 2020-12-22 #$"    /* date version */
 
-#define BLOSCLZ_VERSION_STRING "2.5.0"   /* the internal compressor version */
+#define BLOSCLZ_VERSION_STRING "2.5.1"   /* the internal compressor version */
 
 /* The *_FORMAT symbols should be just 1-byte long */
 #define BLOSC_VERSION_FORMAT    2   /* Blosc format version, starting at 1 */
diff --git a/blosc/blosclz.c b/blosc/blosclz.c
index 4e1f648f..a0552c2c 100644
--- a/blosc/blosclz.c
+++ b/blosc/blosclz.c
@@ -462,6 +462,7 @@ int blosclz_compress(const int clevel, const void* input, int length,
   const uint8_t* ip_bound = ibase + length - 1;
   const uint8_t* ip_limit = ibase + length - 12;
   uint8_t* op = (uint8_t*)output;
+  const uint8_t* op_limit = op + maxout;
 
   /* input and output buffer cannot be less than 16 and 66 bytes or we can get into trouble */
   if (length < 16 || maxout < 66) {
@@ -481,7 +482,6 @@ int blosclz_compress(const int clevel, const void* input, int length,
   *op++ = *ip++;
 
   /* main loop */
-  const uint8_t* op_limit = op + maxout;
   while (BLOSCLZ_LIKELY(ip < ip_limit)) {
     const uint8_t* ref;
     unsigned distance;
