From ab3825969d2a78f9871242c9ce89fcd34a3ddafe Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Caol=C3=A1n=20McNamara?= <caolan.mcnamara@collabora.com>
Date: Sat, 24 Jun 2023 21:01:01 +0100
Subject: [PATCH] ofz#60034 restore cmin/cmax before continue

---
 src/hunspell/affixmgr.cxx | 15 ++++++++++++---
 1 file changed, 12 insertions(+), 3 deletions(-)

diff --git a/src/hunspell/affixmgr.cxx b/src/hunspell/affixmgr.cxx
index c193105af..a9e395eb7 100644
--- a/src/hunspell/affixmgr.cxx
+++ b/src/hunspell/affixmgr.cxx
@@ -1675,12 +1675,21 @@ struct hentry* AffixMgr::compound_check(const std::string& word,
         // compound words, overriding the effect of COMPOUNDPERMITFLAG
         if ((rv) && compoundforbidflag &&
                 TESTAFF(rv->astr, compoundforbidflag, rv->alen) && !hu_mov_rule) {
-            // given the while conditions that continue jumps to, this situation
-            // never ends
-            if (!scpd && !onlycpdrule && simplifiedcpd) {
+            bool would_continue = !onlycpdrule && simplifiedcpd;
+            if (!scpd && would_continue) {
+                // given the while conditions that continue jumps to, this situation
+                // never ends
                 HUNSPELL_WARNING(stderr, "break infinite loop\n");
                 break;
             }
+
+            if (scpd > 0 && would_continue) {
+                // under these conditions we loop again, but the assumption above
+                // appears to be that cmin and cmax are the original values they
+                // had in the outside loop
+                cmin = oldcmin;
+                cmax = oldcmax;
+            }
             continue;
         }
 
