=================================================================
==360349==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7f9fade07530 at pc 0x7f9fb0282616 bp 0x7fff1f6efdf0 sp 0x7fff1f6ef5b0
READ of size 4 at 0x7f9fade07530 thread T0
    #0 0x7f9fb0282615 in __asan_memcpy (/usr/lib/llvm-18/lib/clang/18/lib/linux/libclang_rt.asan-x86_64.so+0xf6615) (BuildId: 49743e1a9753906ada8c1ae30e03059f556dfa80)
    #1 0x558191118262 in INDEX_ORDERLY_RAM_Marshal /root/src/tpm2/NVMarshal.c:4238:9
    #2 0x558191117151 in PERSISTENT_ALL_Marshal /root/src/tpm2/NVMarshal.c:4731:16
    #3 0x558191058c47 in TPM2_PersistentAllStore /root/src/tpm_tpm2_interface.c:270:19
    #4 0x558191199072 in libtpms_plat__NvCommit /root/src/tpm2/LibtpmsCallbacks.c:144:15
    #5 0x55819112474c in _plat__NvCommit /root/src/tpm2/NVMem.c:444:15
    #6 0x558191124938 in NvCommit /root/src/tpm2/NVReserved.c:108:13
    #7 0x5581911cf33b in ExecuteCommand /root/src/tpm2/ExecCommand.c:307:10
    #8 0x5581911ac656 in _plat__RunCommand /root/src/tpm2/RunCommand.c:95:5
    #9 0x5581911348c6 in _rpc__Send_Command /root/src/tpm2/TPMCmdp.c:245:5
    #10 0x558191059861 in TPM2_Process /root/src/tpm_tpm2_interface.c:219:5
    #11 0x558191049d44 in TPMLIB_Process /root/src/tpm_library.c:160:12
    #12 0x558191049288 in LLVMFuzzerTestOneInput /root/tests/fuzz.cc:115:11
    #13 0x558191049a1e in main /root/tests/fuzz-main.c:42:17
    #14 0x7f9faf6f41c9  (/lib/x86_64-linux-gnu/libc.so.6+0x2a1c9) (BuildId: 8f2af70b7deed50338b9186c7dd60cef3826e18f)
    #15 0x7f9faf6f428a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2a28a) (BuildId: 8f2af70b7deed50338b9186c7dd60cef3826e18f)
    #16 0x558191047b94 in _start (/root/fuzz+0x52b94) (BuildId: 8d8ffaf4a7a3e8ec0904cc792d0bc3874814e05c)

Address 0x7f9fade07530 is located in stack of thread T0 at offset 5424 in frame
    #0 0x558191116c1f in PERSISTENT_ALL_Marshal /root/src/tpm2/NVMarshal.c:4700

  This frame has 7 object(s):
    [32, 36) 'magic' (line 4701)
    [48, 1112) 'pd' (line 4702)
    [1248, 1376) 'od' (line 4703)
    [1408, 1872) 'srd' (line 4704)
    [1936, 4780) 'scd' (line 4705)
    [4912, 5424) 'indexOrderlyRam' (line 4707) <== Memory access at offset 5424 overflows this variable
    [5488, 5584) 'block_skip' (line 4708)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /root/src/tpm2/NVMarshal.c:4238:9 in INDEX_ORDERLY_RAM_Marshal
Shadow bytes around the buggy address:
  0x7f9fade07280: 00 00 00 00 00 04 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2
  0x7f9fade07300: f2 f2 f2 f2 f2 f2 00 00 00 00 00 00 00 00 00 00
  0x7f9fade07380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f9fade07400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f9fade07480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7f9fade07500: 00 00 00 00 00 00[f2]f2 f2 f2 f2 f2 f2 f2 00 00
  0x7f9fade07580: 00 00 00 00 00 00 00 00 00 00 f3 f3 f3 f3 f3 f3
  0x7f9fade07600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f9fade07680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f9fade07700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f9fade07780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==360349==ABORTING
