From 60fdd9ecd84b841351059dbfb962a32f616e376e Mon Sep 17 00:00:00 2001
From: Volodymyr Shymanskyy <vshymanskyi@gmail.com>
Date: Sat, 10 Apr 2021 01:21:08 +0300
Subject: [PATCH] Bounds check on opcode decoding

---
 source/m3_compile.c | 15 +++++++++++++++
 source/m3_compile.h | 12 +-----------
 2 files changed, 16 insertions(+), 11 deletions(-)

diff --git a/source/m3_compile.c b/source/m3_compile.c
index a895c496..e525da2f 100644
--- a/source/m3_compile.c
+++ b/source/m3_compile.c
@@ -2194,6 +2194,21 @@ const M3OpInfo c_operationsFC [] =
 # endif
 };
 
+const M3OpInfo* GetOpInfo(m3opcode_t opcode) {
+    switch (opcode >> 8) {
+    case 0x00:
+    	if (opcode < M3_COUNT_OF(c_operations)) {
+    		return &c_operations[opcode];
+    	}
+    case 0xFC:
+    	opcode &= 0xFF;
+    	if (opcode < M3_COUNT_OF(c_operationsFC)) {
+    		return &c_operationsFC[opcode];
+    	}
+    }
+    return NULL;
+}
+
 M3Result  Compile_BlockStatements  (IM3Compilation o)
 {
     M3Result result = m3Err_none;
diff --git a/source/m3_compile.h b/source/m3_compile.h
index ece7ad6b..5bf8e099 100644
--- a/source/m3_compile.h
+++ b/source/m3_compile.h
@@ -138,17 +138,7 @@ M3OpInfo;
 
 typedef const M3OpInfo *    IM3OpInfo;
 
-extern const M3OpInfo c_operations [];
-extern const M3OpInfo c_operationsFC [];
-
-static inline
-const M3OpInfo* GetOpInfo(m3opcode_t opcode) {
-    switch (opcode >> 8) {
-    case 0x00: return &c_operations[opcode];
-    case 0xFC: return &c_operationsFC[opcode & 0xFF];
-    default:   return NULL;
-    }
-}
+extern const M3OpInfo* GetOpInfo(m3opcode_t opcode);
 
 // TODO: This helper should be removed, when MultiValue is implemented
 static inline
